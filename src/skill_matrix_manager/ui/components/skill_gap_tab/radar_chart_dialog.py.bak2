"""レーダーチャート表示ダイアログ"""
from PyQt5.QtWidgets import QDialog, QVBoxLayout, QPushButton, QHBoxLayout, QSizePolicy
from PyQt5.QtCore import Qt
from .radar_chart import RadarChartWidget
from src.skill_matrix_manager.utils.debug_logger import DebugLogger

logger = DebugLogger.get_logger()

class RadarChartDialog(QDialog):
    """レーダーチャート表示用ダイアログ"""
    
    def __init__(self, data, parent=None):
        """初期化"""
        logger.info(f"RadarChartDialog初期化開始: parent={parent}, data keys={data.keys() if data else 'None'}")
        super().__init__(parent)
        self.data = data
        self.setup_ui()
        logger.info("RadarChartDialog初期化完了")
        
    def setup_ui(self):
        """UIの設定"""
        self.setWindowTitle("スキルレーダーチャート")
        self.setMinimumSize(700, 600)
        self.setWindowFlags(self.windowFlags() & ~Qt.WindowContextHelpButtonHint)
        
        # レイアウト設定
        layout = QVBoxLayout(self)
        layout.setContentsMargins(20, 20, 20, 20)
        
        # レーダーチャートウィジェット
        logger.info("チャートウィジェット作成")
        self.chart_widget = RadarChartWidget(self)
        self.chart_widget.setSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        layout.addWidget(self.chart_widget)
        
        # ボタンレイアウト
        button_layout = QHBoxLayout()
        self.close_button = QPushButton("閉じる")
        self.close_button.setMinimumWidth(120)
        self.close_button.clicked.connect(self.accept)
        button_layout.addStretch()
        button_layout.addWidget(self.close_button)
        
        layout.addLayout(button_layout)
        
        # チャートの更新
        logger.info("チャート更新呼び出し")
        self.chart_widget.update_chart(self.data)
